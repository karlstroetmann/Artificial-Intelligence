search := procedure(start, goal, nextStates) {
    limit := 1;
    while (true) {
        print("limit = $limit$");
        Path := depthLimitedSearch(start, goal, nextStates, limit);
        if (Path != om) {
            return Path;
        }
        limit += 1;
    }
};
depthLimitedSearch := procedure(start, goal, nextStates, limit) {
    Stack := [ [start] ];
    while (Stack != []) {
        Path  := Stack[-1];
        Stack := Stack[..-2];
        state := Path[-1];
        if (state == goal) {
            return Path;
        }
        if (#Path >= limit) {
            continue;
        }
        for (ns in nextStates(state) | !(ns in Path)) {  
            Stack += [ Path + [ns] ];
        }
    }
};

